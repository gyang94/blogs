import{_ as i,c as a,o as t,ae as e}from"./chunks/framework.Bk39dawk.js";const h="/blogs/assets/ide-running.CV_-kvyl.png",g=JSON.parse('{"title":"搭建Fluss本地开发环境","description":"","frontmatter":{"title":"搭建Fluss本地开发环境","tags":"fluss"},"headers":[],"relativePath":"notes/fluss/01-development-env-setup.md","filePath":"notes/fluss/01-development-env-setup.md"}'),l={name:"notes/fluss/01-development-env-setup.md"};function n(p,s,k,r,d,o){return t(),a("div",null,s[0]||(s[0]=[e(`<h1 id="搭建fluss本地开发环境" tabindex="-1"><strong>搭建Fluss本地开发环境</strong> <a class="header-anchor" href="#搭建fluss本地开发环境" aria-label="Permalink to &quot;**搭建Fluss本地开发环境**&quot;">​</a></h1><p>在Fluss的官网中介绍了如何在本地部署Fluss集群，并且提供了相关的下载包(<a href="https://alibaba.github.io/fluss-docs/downloads/" target="_blank" rel="noreferrer">下载地址</a>)。 用户可以根据<a href="https://alibaba.github.io/fluss-docs/docs/install-deploy/deploying-local-cluster/" target="_blank" rel="noreferrer">部署文档</a>的指示轻松的在本地运行一个Fluss集群并完成简单测试。但是本地开发的话，我们需要搭建本地的开发环境，也就是在IDE中直接运行代码启动集群，从而方便本地的开发和断点调试。这篇文章总结了自己搭建Fluss本地开发环境的步骤，以及一些发现。</p><h2 id="运行fluss组件" tabindex="-1">运行Fluss组件 <a class="header-anchor" href="#运行fluss组件" aria-label="Permalink to &quot;运行Fluss组件&quot;">​</a></h2><p>Fluss集群需要运行三个组件, <code>Zookeeper</code>, <code>CoordinatorServer</code> 以及 <code>TabletServer</code> 。我们需要分别启动它们。</p><h3 id="_0-下载fluss包" tabindex="-1">0. 下载fluss包 <a class="header-anchor" href="#_0-下载fluss包" aria-label="Permalink to &quot;0. 下载fluss包&quot;">​</a></h3><p>以当前的fluss 0.5.0版本为例，在官网中下载并解压后，会得到一个名为fluss-0.5.0的文件夹。在其中提供的local-cluster.sh脚本中可以看到，启动一个Fluss集群，需要按顺序分别启动 <code>Zookeeper</code>, <code>CoordinatorServer</code> 以及 <code>TabletServer</code>。我们也跟着这个步骤分别启动这三个组件。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># start zookeeper</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$FLUSS_BIN_DIR</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/fluss-daemon.sh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> zookeeper</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FLUSS_CONF_DIR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot;/zookeeper.properties</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Start single Coordinator Server on this machine</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$FLUSS_BIN_DIR</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/coordinator-server.sh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Start single Tablet Server on this machine</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FLUSS_BIN_DIR</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">}&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/tablet-server.sh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span></span></code></pre></div><h3 id="_1-启动zookeeper" tabindex="-1">1. 启动Zookeeper <a class="header-anchor" href="#_1-启动zookeeper" aria-label="Permalink to &quot;1. 启动Zookeeper&quot;">​</a></h3><p>zookeeper不是本地开发的重点，只需要提供一个zookeeper进程供fluss集群使用。这次我们只需要启动zookeeper，因此在local-cluster.sh中可以注释掉后面CoordinatorServer和TabletServer的启动命令，并重新执行</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bin/local-cluster.sh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span></span></code></pre></div><p>这样就会只启动zookeeper组件了。</p><h3 id="_2-启动coordinatorserver" tabindex="-1">2. 启动CoordinatorServer <a class="header-anchor" href="#_2-启动coordinatorserver" aria-label="Permalink to &quot;2. 启动CoordinatorServer&quot;">​</a></h3><p>在Fluss官方Github下载源码，导入IDE，并编译成功后，找到 <code>CoordinatorServer</code> 这个类，里面有一个main方法，意味着这个类是可以直接执行的。</p><p>但是有一点需要注意，main方法需要传入一个configDir的启动参数，这里使用下载的fluss包里的配置文件。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">--configDir</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">path</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> flus</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/fluss-0.5.0/confeter</span></span></code></pre></div><h3 id="_3-启动tabletserver" tabindex="-1">3. 启动TabletServer <a class="header-anchor" href="#_3-启动tabletserver" aria-label="Permalink to &quot;3. 启动TabletServer&quot;">​</a></h3><p>在Fluss项目中找到 <code>TabletServer</code> 这个类，同样的设置configDir参数并启动。</p><div class="language-jsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">configDir </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">path to fluss</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fluss</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">conf</span></span></code></pre></div><p>成功启动后，在IDE里面可以看到两个正在运行的程序。现在就可以随意的打断点调试了。</p><p><img src="`+h+`" alt="ide-running"></p><h2 id="fluss集群启动之后" tabindex="-1">Fluss集群启动之后 <a class="header-anchor" href="#fluss集群启动之后" aria-label="Permalink to &quot;Fluss集群启动之后&quot;">​</a></h2><p>我们现在成功启动了一个fluss集群，但是还没有创建任何表，没有写入任何数据。但实际上集群已经完成了一下准备工作。</p><h3 id="zookeeper信息注册" tabindex="-1">zookeeper信息注册 <a class="header-anchor" href="#zookeeper信息注册" aria-label="Permalink to &quot;zookeeper信息注册&quot;">​</a></h3><p>集群启动的时候已经在zookeeper注册了相关信息，我们可以登陆zookeeper去查看。 要想查看zookeeper里的数据，我们可以去zookeeper官网下载一个包，其中提供一个叫zkCli.sh的脚本，执行</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bin/zkCli.sh</span></span></code></pre></div><p>便可进入查看。</p><p>在zookeeper中，我们可以看到在根目录下注册了一个叫 <code>fluss</code> 的节点，在这个节点下面有三个子节点</p><p><code>coordinators</code> , <code>metadata</code> 以及 <code>tabletservers</code> 。</p><div class="language-jsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[zk: localhost:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2181</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CONNECTED</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">33</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] ls </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[fluss, zookeeper]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[zk: localhost:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2181</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CONNECTED</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">34</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] ls </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fluss</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[coordinators, metadata, tabletservers]</span></span></code></pre></div><p>分别查看里面的具体信息</p><p><strong>coordinator</strong></p><p>coordinator其中显示了一个active的server信息，包含version，id，host以及port。</p><div class="language-jsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[zk: localhost:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2181</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CONNECTED</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">38</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] get </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fluss</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">coordinators</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">active</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;version&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;6ced8032-9800-4f5b-abd5-444c9623625c&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;host&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;127.0.0.1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;port&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9123</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><strong>metadata</strong></p><p>metadata默认注册了一个名为fluss的空database。</p><div class="language-jsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[zk: localhost:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2181</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CONNECTED</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">39</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] ls </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fluss</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">metadata</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[databases]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[zk: localhost:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2181</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CONNECTED</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">40</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] ls </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fluss</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">metadata</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">databases</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[fluss]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[zk: localhost:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2181</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CONNECTED</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">41</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] ls </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fluss</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">metadata</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">databases</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fluss</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[]</span></span></code></pre></div><p><strong>tabletservers</strong></p><p>tabletservers里注册了一个id为0的server信息，包含version，host，port以及register_timestamp。</p><div class="language-jsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[zk: localhost:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2181</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CONNECTED</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">46</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] get </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fluss</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tabletservers</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ids</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;version&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;host&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;127.0.0.1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;port&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50258</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;register_timestamp&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1740039756113</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="创建data文件路径" tabindex="-1">创建data文件路径 <a class="header-anchor" href="#创建data文件路径" aria-label="Permalink to &quot;创建data文件路径&quot;">​</a></h3><p>在配置文件server.yaml里，指定了数据存储的文件路径</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># The local data directory to be used for Fluss to storing kv and log data.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">data.dir:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /tmp/fluss-data</span></span></code></pre></div><p>因此在 <code>/tmp</code> 目录下，集群创建了名为 <code>fluss-data</code> 的文件夹，用来存放数据。打开文件夹可以看到有两个文件(high-watermark-checkpoint, recovery-point-offset-checkpoint )和一个文件夹(remote-log-index-cache)。现在都是空的，没有任何内容在里面。</p><h2 id="小结" tabindex="-1">小结 <a class="header-anchor" href="#小结" aria-label="Permalink to &quot;小结&quot;">​</a></h2><p>本文介绍了如何搭建Fluss本地开发环境，如何在IDE中启动Fluss集群，并总结了一些集群启动之后的观察。为之后的Fluss学习做好准备。</p>`,45)]))}const c=i(l,[["render",n]]);export{g as __pageData,c as default};
